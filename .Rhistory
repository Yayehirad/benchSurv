devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::install()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::install()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
install.packages("benchsurv")
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
install.packages("survival")
install.packages("survival")
devtools::check()
setwd("S:/R-MNHS-SPHPM-EPM-TRU/MRDR/Registry data/MRDR analysis/2025/250211_BenchmarkKM")
# Clear all objects from the workspace
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(survival)  # For survival analysis
library(dplyr)      # For data manipulation
library(ggplot2)    # For visualization
library(binom)      # For binomial confidence intervals
library(stats)      # For logistic regression (glm)
library(tidyr)      # For handling missing values
library(survminer)
library(tidyverse)
library(ggrepel)
library(funnelR)
library(RColorBrewer)
library(scales)
library(colorspace)
library(plotly)
library(htmlwidgets)
data_Path <- "S:/R-MNHS-SPHPM-EPM-TRU/MRDR/Registry data/MRDR Data/2024/240514_Data/"
code_Path <- "S:/R-MNHS-SPHPM-EPM-TRU/MRDR/Registry data/MRDR analysis/Subroutines_R/"
# data
tbl_MaintenanceTherapy <- haven::read_dta(file.path(data_Path, "tbl_MaintenanceTherapy.dta"))
tbl_ASCT <- haven::read_dta(file.path(data_Path, "tbl_ASCT.dta"))
tbl_Chemotherapy <- haven::read_dta(file.path(data_Path, "tbl_Chemotherapy.dta"))
tbl_Review <- haven::read_dta(file.path(data_Path, "tbl_Review.dta"))
tbl_Diagnosis <- haven::read_dta(file.path(data_Path, "tbl_Diagnosis.dta"))
tbl_Patient <- haven::read_dta(file.path(data_Path, "tbl_Patient.dta"))
tbl_PatientHospital <- haven::read_dta(file.path(data_Path, "tbl_PatientHospital.dta"))
tbl_Hospital <- haven::read_dta(file.path(data_Path, "tbl_Hospital.dta"))
# patient list
mm_pts_list <- tbl_Diagnosis %>%
dplyr::select(-ReviewDate) %>%
dplyr::filter(Diagnosis == 1) %>%
select(RegistryId,DateofDiagnosis) %>%
left_join(tbl_Patient %>%select(RegistryId,DOB),by="RegistryId")%>%
mutate(DateofDiagnosis=as.Date(DateofDiagnosis,format="%Y-%m-%d"),
DOB=as.Date(DOB,format="%Y-%m-%d"))%>%
mutate(Age=(DateofDiagnosis-DOB)/365.25)
## add site
mm_pts_site <- tbl_Hospital %>%
select(HospitalId,SiteShortName,Country) %>%
right_join(tbl_PatientHospital%>%select(HospitalId,RegistryId),by="HospitalId") %>%
right_join(mm_pts_list,by="RegistryId")
# a) Get last follow-up
source(paste0(code_Path, "GetLastContactDate.R"))# LastDates[registryId, LastDate]
mm_pts_lastDate <- mm_pts_site %>%
dplyr::left_join(LastDates,by="RegistryId")
#Drop dx before 2012
startDate <- as.Date("2012-01-01",format="%Y-%m-%d")
mm_pts_lastDate <- mm_pts_lastDate %>%
dplyr::filter(DateofDiagnosis>=startDate) %>%
mutate(startDate=startDate) %>%
mutate(entrytime=DateofDiagnosis-startDate)
#b) Get date of death
Death <- tbl_Review %>%
dplyr::select(RegistryId,  DateofDeath) %>%
dplyr::filter(!is.na(DateofDeath)) %>%
dplyr::group_by(RegistryId) %>%
dplyr::arrange(DateofDeath) %>%
dplyr::slice(1) %>%
dplyr::ungroup()
mm_pts_Death <- mm_pts_lastDate %>%
dplyr::left_join(Death,by="RegistryId")
#censordates
AusCensorDate <- as.Date("2022_01-01",format="%Y-%m-%d")
NZCensorDate <- as.Date("2023_01-01",format="%Y-%m-%d")
mm_pts_Death <- mm_pts_Death %>%
filter(LastDate>DateofDiagnosis )%>%
dplyr::mutate(Death=case_when(!is.na(DateofDeath)~1,TRUE~0),
DDate=case_when(Country==1~pmax(LastDate,AusCensorDate,na.rm = T),
Country==2~pmax(LastDate,NZCensorDate,na.rm = T))
)%>%
dplyr::mutate(DDate= if_else(Death==1,DateofDeath,DDate))
# DTime time to event/censor in months
mm_pts_Death <- mm_pts_Death %>%
dplyr::mutate(DTime = as.numeric(DDate - DateofDiagnosis)*12/365.25) %>%
dplyr::mutate(DTime =round(DTime,0))
mm_pts_OS <- mm_pts_Death %>%
select(SiteShortName,Death,DTime,Age)
#mm_pts_OS %>% count(SiteShortName)
data <- mm_pts_OS %>%
mutate(Age = as.numeric(Age))
data %>% count(SiteShortName)
View(data %>% count(SiteShortName))
test_data <- mm_pts_OS %>%
mutate(Age = as.numeric(Age)) %>%
filter(SiteShortName %in%c("ALF","MDM","CHH","PAH","VCC","SVM","RPA","RBW")) %>%
mutate(SiteShortName=case_when(SiteShortName=="ALF"~"SiteA",
SiteShortName=="MDM"~"SiteB",
SiteShortName=="CHH"~"SiteC",
SiteShortName=="PAH"~"SiteD",
SiteShortName=="VCC"~"SiteE",
SiteShortName=="SVM"~"SiteF",
SiteShortName=="RPA"~"SiteG",
SiteShortName=="RBW"~"SiteH"))
View(data)
test_data <- mm_pts_OS %>%
mutate(Age = as.numeric(Age)) %>%
filter(SiteShortName %in%c("ALF","MDM","CHH","PAH","VCC","SVM","RPA","RBW")) %>%
mutate(SiteShortName=case_when(SiteShortName=="ALF"~"SiteA",
SiteShortName=="MDM"~"SiteB",
SiteShortName=="CHH"~"SiteC",
SiteShortName=="PAH"~"SiteD",
SiteShortName=="VCC"~"SiteE",
SiteShortName=="SVM"~"SiteF",
SiteShortName=="RPA"~"SiteG",
SiteShortName=="RBW"~"SiteH",TRUE~SiteShortName))
View(test_data)
#View(test_data)
write.csv(test_data,"C:/Users/yyay0001/Rpackage/benchSurv/test_data.csv")
#View(test_data)
read.csv("C:/Users/yyay0001/Rpackage/benchSurv/test_data.csv")
data<-read.csv("C:/Users/yyay0001/Rpackage/benchSurv/test_data.csv")
plot <- benchmark_survival(data, "SiteShortName", "Death", "DTime", "Age", 36, "SiteD")
devtools::install_github("Yayehirad/benchSurv", ref = "master")
library(benchSurv)
data<-read.csv("C:/Users/yyay0001/Rpackage/benchSurv/test_data.csv")
plot <- benchmark_survival(data, "SiteShortName", "Death", "DTime", "Age", 36, "SiteD")
print(plot)
devtools::document()
devtools::check()
devtools::install_github("Yayehirad/benchSurv", ref = "master")
devtools::install_github("Yayehirad/benchSurv", ref = "master")
library(benchSurv)
data<-read.csv("C:/Users/yyay0001/Rpackage/benchSurv/test_data.csv")
plot <- benchmark_survival(data, "SiteShortName", "Death", "DTime", "Age", 36, "SiteD")
print(plot)
plot <- benchmark_survival(data, "SiteShortName", "Death", "DTime", "Age", 36, "SiteD")
print(plot)
devtools::document()
devtools::check()
devtools::document()
devtools::install_github("Yayehirad/benchSurv", ref = "master")
devtools::document()
