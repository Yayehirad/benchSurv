# ---------------------------------------------------------------------
benchmark_plot1 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
numeric_covariates = c("Age"),    # Numeric covariates (e.g., Age)
factor_covariates  = c("ISS_cat"),      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = TRUE             # Display the legend
)
# Print the resulting funnel plot
print(benchmark_plot1)
# Run the benchmark_survival function from the benchSurv package
#set reference level for the hz
# Convert ISS_cat to an unordered factor (if it's not already)
test_data$ISS_cat <- factor(test_data$ISS_cat, ordered = FALSE)
# Now you can safely relevel to "stage1"
test_data$ISS_cat <- relevel(test_data$ISS_cat, ref = "stage1")
# Similarly for Age_cat
test_data$Age_cat <- factor(test_data$Age_cat, ordered = FALSE)
test_data$Age_cat <- relevel(test_data$Age_cat, ref = "<50")
test_data %>% count(ISS_cat)
test_data <- test_data %>%
test_data <- test_data %>%
dplyr::mutate(Age_centered = Age - mean(Age, na.rm = TRUE))
test_data <- test_data %>%
dplyr::mutate(Age_centered = Age - mean(Age, na.rm = TRUE))
####
benchmark_plot1 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
numeric_covariates = c("Age"),    # Numeric covariates (e.g., Age)
factor_covariates  = c("ISS_cat"),      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = TRUE             # Display the legend
)
# Display the generated funnel plot
print(benchmark_plot)
# Display the generated funnel plot
print(benchmark_plot1)
####
benchmark_plot1 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
numeric_covariates = c("Age_centered"),    # Numeric covariates (e.g., Age)
factor_covariates  = c("ISS_cat"),      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = TRUE             # Display the legend
)
# Display the generated funnel plot
print(benchmark_plot1)
###
benchmark_plot <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,             # Fixed time point for survival analysis (e.g., 36 months for 3-year survival)
highlight_center = "SiteA",  # Center to highlight in the plot
conf_levels = c(0.8, 0.95),    # Confidence levels for funnel plot limits
covariates = c("Age_cat","ISS_cat"),       # Covariates used for risk adjustment (e.g., Age)
include_legend = T        # Set to TRUE to display the legend
)
# Display the generated funnel plot
print(benchmark_plot)
# Usage Example 1: Using separate numeric and factor covariates
# ---------------------------------------------------------------------
benchmark_plot1 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
#numeric_covariates = c("Age"),    # Numeric covariates (e.g., Age)
#factor_covariates  = c("ISS_cat"),      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = TRUE             # Display the legend
)
# Print the resulting funnel plot
print(benchmark_plot1)
# Usage Example 3: no covariate considered
# ---------------------------------------------------------------------
benchmark_plot3 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
numeric_covariates = NULL,    # Numeric covariates (e.g., Age)
factor_covariates  = NULL,      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = TRUE             # Display the legend
)
# Print the resulting funnel plot
print(benchmark_plot3)
# ---------------------------------------------------------------------
# Usage Example 4: Using the unified 'covariates' parameter
# (When neither numeric_covariates nor factor_covariates are specified,
#  the covariates will be treated as factors.)
# ---------------------------------------------------------------------
benchmark_plot4 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,
covariates = c("ISS"),            # Unified covariates parameter (treated as categorical)
highlight_center = "SiteA",
conf_levels = c(0.8, 0.95),
include_legend = FALSE            # Do not display the legend
)
# Print the second plot
print(benchmark_plot4)
devtools::document()
remove.packages("benchSurv")
library(benchSurv)
remove.packages("benchSurv")
library(benchSurv)
benchmark_plot1 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
numeric_covariates = c("Age_centered"),    # Numeric covariates (e.g., Age)
factor_covariates  = c("ISS_cat"),      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = F             # Display the legend
)
# Display the generated funnel plot
print(benchmark_plot1)
library(benchSurv)
library(tidyverse)
test_data<-read.csv("C:/Users/yyay0001/Rpackage/bench_resources/test_data.csv")
### Inspect Data Structure
str(test_data)
head(test_data)
summary(test_data)
# Run the benchmark_survival function from the benchSurv package
#set reference level for the hz
# Convert ISS_cat to an unordered factor (if it's not already)
test_data$ISS_cat <- factor(test_data$ISS_cat, ordered = FALSE)
# Now you can safely relevel to "stage1"
test_data$ISS_cat <- relevel(test_data$ISS_cat, ref = "stage1")
# Similarly for Age_cat
test_data$Age_cat <- factor(test_data$Age_cat, ordered = FALSE)
test_data$Age_cat <- relevel(test_data$Age_cat, ref = "<50")
test_data <- test_data %>%
dplyr::mutate(Age_centered = Age - mean(Age, na.rm = TRUE))
benchmark_plot1 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
numeric_covariates = c("Age_centered"),    # Numeric covariates (e.g., Age)
factor_covariates  = c("ISS_cat"),      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = F             # Display the legend
)
# Display the generated funnel plot
print(benchmark_plot1)
####### Usage Example 2: only factor vars
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,             # Fixed time point for survival analysis (e.g., 36 months for 3-year survival)
highlight_center = "SiteA",  # Center to highlight in the plot
conf_levels = c(0.8, 0.95),    # Confidence levels for funnel plot limits
covariates = c("Age_cat","ISS_cat"),       # Covariates used for risk adjustment (e.g., Age)
include_legend = T        # Set to TRUE to display the legend
)
# Display the generated funnel plot
print(benchmark_plot2)
benchmark_plot1 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
numeric_covariates = c("Age_centered"),    # Numeric covariates (e.g., Age)
factor_covariates  = c("ISS_cat"),      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = F             # Display the legend
)
# Display the generated funnel plot
print(benchmark_plot1)
####### Usage Example 2: only factor vars
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,             # Fixed time point for survival analysis (e.g., 36 months for 3-year survival)
highlight_center = "SiteA",  # Center to highlight in the plot
conf_levels = c(0.8, 0.95),    # Confidence levels for funnel plot limits
covariates = c("Age_cat","ISS_cat"),       # Covariates used for risk adjustment (e.g., Age)
include_legend = T        # Set to TRUE to display the legend
)
# Display the generated funnel plot
print(benchmark_plot2)
####### Usage Example 2: only factor vars
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,             # Fixed time point for survival analysis (e.g., 36 months for 3-year survival)
highlight_center = "SiteA",  # Center to highlight in the plot
conf_levels = c(0.8, 0.95),    # Confidence levels for funnel plot limits
covariates = c("Age_cat","ISS_cat"),       # Covariates used for risk adjustment (e.g., Age)
include_legend = F        # Set to TRUE to display the legend
)
# Display the generated funnel plot
print(benchmark_plot2)
####### Usage Example 2: only factor vars
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 60,             # Fixed time point for survival analysis (e.g., 36 months for 3-year survival)
highlight_center = "SiteA",  # Center to highlight in the plot
conf_levels = c(0.8, 0.95),    # Confidence levels for funnel plot limits
covariates = c("Age_cat","ISS_cat"),       # Covariates used for risk adjustment (e.g., Age)
include_legend = F        # Set to TRUE to display the legend
)
# Display the generated funnel plot
print(benchmark_plot2)
####### Usage Example 2: only factor vars
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 12,             # Fixed time point for survival analysis (e.g., 36 months for 3-year survival)
highlight_center = "SiteA",  # Center to highlight in the plot
conf_levels = c(0.8, 0.95),    # Confidence levels for funnel plot limits
covariates = c("Age_cat","ISS_cat"),       # Covariates used for risk adjustment (e.g., Age)
include_legend = F        # Set to TRUE to display the legend
)
# Display the generated funnel plot
print(benchmark_plot2)
devtools::document()
remove.packages("benchSurv")
library(benchSurv)
remove.packages("benchSurv")
library(benchSurv)
remove.packages("benchSurv")
devtools::install_github("Yayehirad/benchSurv", ref = "master")
remove.packages("benchSurv")
library(benchSurv)
devtools::install_github("Yayehirad/benchSurv", ref = "master")
library(benchSurv)
library(tidyverse)
test_data<-read.csv("C:/Users/yyay0001/Rpackage/bench_resources/test_data.csv")
### Inspect Data Structure
str(test_data)
head(test_data)
summary(test_data)
# Run the benchmark_survival function from the benchSurv package
#set reference level for the hz
# Convert ISS_cat to an unordered factor (if it's not already)
test_data$ISS_cat <- factor(test_data$ISS_cat, ordered = FALSE)
# Now you can safely relevel to "stage1"
test_data$ISS_cat <- relevel(test_data$ISS_cat, ref = "stage1")
# Similarly for Age_cat
test_data$Age_cat <- factor(test_data$Age_cat, ordered = FALSE)
test_data$Age_cat <- relevel(test_data$Age_cat, ref = "<50")
test_data <- test_data %>%
dplyr::mutate(Age_centered = Age - mean(Age, na.rm = TRUE))
benchmark_plot1 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",          # Column with center identifiers
status_col = "Death",             # Column with event status (0/1)
time_col = "DTime",               # Column with survival times
fixed_time = 36,                  # Fixed time point for survival analysis (36 months)
numeric_covariates = c("Age_centered"),    # Numeric covariates (e.g., Age)
factor_covariates  = c("ISS_cat"),      # Factor covariates (e.g., ISS)
highlight_center = "SiteA",       # Center to highlight in the plot
conf_levels = c(0.8, 0.95),         # Confidence levels for funnel plot limits
include_legend = F             # Display the legend
)
# With Empirical Bayes Adjustment
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,
numeric_covariates = c("Age_centered"),
factor_covariates  = c("ISS_cat"),
highlight_center = "SiteA",
conf_levels = c(0.8, 0.95),
include_legend = FALSE,
bayesian_adjust = TRUE,                 # Apply Bayesian adjustment
bayesian_method = "empirical_bayes"     # Use Empirical Bayes method
)
source("C:/Users/yyay0001/Rpackage/benchSurv/R/benchmark_survival.R", echo=TRUE)
source("C:/Users/yyay0001/Rpackage/benchSurv/R/benchmark_survival.R")
### Load Test Data-------------
test_data<-read.csv("C:/Users/yyay0001/Rpackage/bench_resources/test_data.csv")
### Inspect Data Structure
str(test_data)
head(test_data)
summary(test_data)
### Run Full Benchmarking Process
# Load the data
# Example usage of the benchSurv package's benchmark_survival function
# Load your test data (replace with your actual data source)
# test_data <- read.csv("your_data_file.csv")
# Run the benchmark_survival function from the benchSurv package
#set reference level for the hz
# Convert ISS_cat to an unordered factor (if it's not already)
test_data$ISS_cat <- factor(test_data$ISS_cat, ordered = FALSE)
# Now you can safely relevel to "stage1"
test_data$ISS_cat <- relevel(test_data$ISS_cat, ref = "stage1")
# Similarly for Age_cat
test_data$Age_cat <- factor(test_data$Age_cat, ordered = FALSE)
test_data$Age_cat <- relevel(test_data$Age_cat, ref = "<50")
test_data <- test_data %>%
dplyr::mutate(Age_centered = Age - mean(Age, na.rm = TRUE))
# With Empirical Bayes Adjustment---------------
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,
numeric_covariates = c("Age_centered"),
factor_covariates  = c("ISS_cat"),
highlight_center = "SiteA",
conf_levels = c(0.8, 0.95),
include_legend = FALSE,
bayesian_adjust = TRUE,                 # Apply Bayesian adjustment
bayesian_method = "empirical_bayes"     # Use Empirical Bayes method
)
devtools::document()
devtools::document()
source("C:/Users/yyay0001/Rpackage/benchSurv/R/benchmark_survival.R")  #
# With Empirical Bayes Adjustment---------------
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,
numeric_covariates = c("Age_centered"),
factor_covariates  = c("ISS_cat"),
highlight_center = "SiteA",
conf_levels = c(0.8, 0.95),
include_legend = FALSE,
bayesian_adjust = TRUE,                 # Apply Bayesian adjustment
bayesian_method = "empirical_bayes"     # Use Empirical Bayes method
)
### Load Test Data-------------
test_data<-read.csv("C:/Users/yyay0001/Rpackage/bench_resources/test_data.csv")
### Inspect Data Structure
str(test_data)
head(test_data)
summary(test_data)
### Run Full Benchmarking Process
# Load the data
# Example usage of the benchSurv package's benchmark_survival function
# Load your test data (replace with your actual data source)
# test_data <- read.csv("your_data_file.csv")
# Run the benchmark_survival function from the benchSurv package
#set reference level for the hz
# Convert ISS_cat to an unordered factor (if it's not already)
test_data$ISS_cat <- factor(test_data$ISS_cat, ordered = FALSE)
# Now you can safely relevel to "stage1"
test_data$ISS_cat <- relevel(test_data$ISS_cat, ref = "stage1")
# Similarly for Age_cat
test_data$Age_cat <- factor(test_data$Age_cat, ordered = FALSE)
test_data$Age_cat <- relevel(test_data$Age_cat, ref = "<50")
test_data <- test_data %>%
dplyr::mutate(Age_centered = Age - mean(Age, na.rm = TRUE))
# With Empirical Bayes Adjustment---------------
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,
numeric_covariates = c("Age_centered"),
factor_covariates  = c("ISS_cat"),
highlight_center = "SiteA",
conf_levels = c(0.8, 0.95),
include_legend = FALSE,
bayesian_adjust = TRUE,                 # Apply Bayesian adjustment
bayesian_method = "empirical_bayes"     # Use Empirical Bayes method
)
devtools::document()
# With Empirical Bayes Adjustment---------------
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,
numeric_covariates = c("Age_centered"),
factor_covariates  = c("ISS_cat"),
highlight_center = "SiteA",
conf_levels = c(0.8, 0.95),
include_legend = FALSE,
bayesian_adjust = TRUE,                 # Apply Bayesian adjustment
bayesian_method = "empirical_bayes"     # Use Empirical Bayes method
)
library(tidyverse)
### Load Test Data-------------
test_data<-read.csv("C:/Users/yyay0001/Rpackage/bench_resources/test_data.csv")
### Inspect Data Structure
str(test_data)
head(test_data)
summary(test_data)
### Run Full Benchmarking Process
# Load the data
# Example usage of the benchSurv package's benchmark_survival function
# Load your test data (replace with your actual data source)
# test_data <- read.csv("your_data_file.csv")
# Run the benchmark_survival function from the benchSurv package
#set reference level for the hz
# Convert ISS_cat to an unordered factor (if it's not already)
test_data$ISS_cat <- factor(test_data$ISS_cat, ordered = FALSE)
# Now you can safely relevel to "stage1"
test_data$ISS_cat <- relevel(test_data$ISS_cat, ref = "stage1")
# Similarly for Age_cat
test_data$Age_cat <- factor(test_data$Age_cat, ordered = FALSE)
test_data$Age_cat <- relevel(test_data$Age_cat, ref = "<50")
test_data <- test_data %>%
dplyr::mutate(Age_centered = Age - mean(Age, na.rm = TRUE))
# With Empirical Bayes Adjustment---------------
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,
numeric_covariates = c("Age_centered"),
factor_covariates  = c("ISS_cat"),
highlight_center = "SiteA",
conf_levels = c(0.8, 0.95),
include_legend = FALSE,
bayesian_adjust = TRUE,                 # Apply Bayesian adjustment
bayesian_method = "empirical_bayes"     # Use Empirical Bayes method
)
devtools::document()
remove.packages("benchSurv")
devtools::install_github("Yayehirad/benchSurv", ref = "master")
library(benchSurv)
library(tidyverse)
### Load Test Data-------------
test_data<-read.csv("C:/Users/yyay0001/Rpackage/bench_resources/test_data.csv")
### Inspect Data Structure
str(test_data)
head(test_data)
summary(test_data)
### Run Full Benchmarking Process
# Load the data
# Example usage of the benchSurv package's benchmark_survival function
# Load your test data (replace with your actual data source)
# test_data <- read.csv("your_data_file.csv")
# Run the benchmark_survival function from the benchSurv package
#set reference level for the hz
# Convert ISS_cat to an unordered factor (if it's not already)
test_data$ISS_cat <- factor(test_data$ISS_cat, ordered = FALSE)
# Now you can safely relevel to "stage1"
test_data$ISS_cat <- relevel(test_data$ISS_cat, ref = "stage1")
# Similarly for Age_cat
test_data$Age_cat <- factor(test_data$Age_cat, ordered = FALSE)
test_data$Age_cat <- relevel(test_data$Age_cat, ref = "<50")
test_data <- test_data %>%
dplyr::mutate(Age_centered = Age - mean(Age, na.rm = TRUE))
# With Empirical Bayes Adjustment---------------
benchmark_plot2 <- benchSurv::benchmark_survival(
data = test_data,
center_col = "Sitename",
status_col = "Death",
time_col = "DTime",
fixed_time = 36,
numeric_covariates = c("Age_centered"),
factor_covariates  = c("ISS_cat"),
highlight_center = "SiteA",
conf_levels = c(0.8, 0.95),
include_legend = FALSE,
bayesian_adjust = TRUE,                 # Apply Bayesian adjustment
bayesian_method = "empirical_bayes"     # Use Empirical Bayes method
)
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
remove.packages("benchSurv")
